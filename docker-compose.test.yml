version: "3.8"

services:
  subgraph_deployer_eth:
    image: subgraph_deployer_eth
    depends_on:
      - graph-node_eth
      - ipfs_eth
      - postgres_eth
    build:
      context: ./local-subgraphs/light-bridge
      dockerfile: Dockerfile.eth
  subgraph_deployer_bnb:
    image: subgraph_deployer_bnb
    depends_on:
      - graph-node_bnb
      - ipfs_bnb
      - postgres_bnb
    build:
      context: ./local-subgraphs/light-bridge
      dockerfile: Dockerfile.bnb

  graph-node_eth:
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs_eth
      - postgres_eth
    extra_hosts:
      - host.docker.internal:host-gateway
    healthcheck:
      test: [ "CMD", "curl -f http://localhost:8000/subgraphs/name/light-bridge/graphql || exit 1" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 2m
    environment:
      postgres_host: postgres_eth
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs_eth:5001"
      ethereum: "local_eth:http://anvil_eth:8545"
      GRAPH_LOG: info
      ETHEREUM_REORG_THRESHOLD: 1
      ETHEREUM_ANCESTOR_COUNT: 1
  ipfs_eth:
    image: ipfs/kubo:v0.17.0
  postgres_eth:
    image: postgres:14
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200",
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      # FIXME: remove this env. var. which we shouldn't need. Introduced by
      # <https://github.com/graphprotocol/graph-node/pull/3511>, maybe as a
      # workaround for https://github.com/docker/for-mac/issues/6270?
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"

  graph-node_bnb:
    image: graphprotocol/graph-node
    depends_on:
      - ipfs_bnb
      - postgres_bnb
    extra_hosts:
      - host.docker.internal:host-gateway
    healthcheck:
      test: [ "CMD", "curl -f http://localhost:8000/subgraphs/name/light-bridge/graphql || exit 1" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 2m
    environment:
      postgres_host: postgres_bnb
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs_bnb:5001"
      ethereum: "local_bnb:http://anvil_bnb:8545"
      GRAPH_LOG: info
      ETHEREUM_REORG_THRESHOLD: 1
      ETHEREUM_ANCESTOR_COUNT: 1
  ipfs_bnb:
    image: ipfs/kubo:v0.17.0
  postgres_bnb:
    image: postgres:14
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200",
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      # FIXME: remove this env. var. which we shouldn't need. Introduced by
      # <https://github.com/graphprotocol/graph-node/pull/3511>, maybe as a
      # workaround for https://github.com/docker/for-mac/issues/6270?
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"

  anvil_bnb:
    image: ghcr.io/foundry-rs/foundry:latest
    command:
      - "anvil --hardfork berlin --chain-id 31338" # use legacy tx to emulate boba network
    environment:
      - ANVIL_IP_ADDR=0.0.0.0
#    ports:
#      - "8546:8545"
  anvil_eth:
    image: ghcr.io/foundry-rs/foundry:latest
    command:
      - "anvil --hardfork berlin  --chain-id 31337" # use legacy tx to emulate boba network
    environment:
      - ANVIL_IP_ADDR=0.0.0.0
#    ports:
#      - "8545:8545"

  lightbridge:
    depends_on:
      - lightbridge_db
      - kms
      - anvil_eth
      - anvil_bnb
      - graph-node_eth
      - graph-node_bnb
    image: bobanetwork/lightbridge:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "sleep 60; npm test"
    #command: bash -c "npm test"
    environment:
      LIGHTBRIDGE_MODE: "testnets"
      LIGHTBRIDGE_REJECT_UNAUTHORIZED: "true"
      # KMS setup (incl. defaults)
      LIGHTBRIDGE_ENV: "dev"
      LIGHTBRIDGE_AWS_KMS_ACCESS_KEY: "1"
      LIGHTBRIDGE_AWS_KMS_SECRET_KEY: "2"
      LIGHTBRIDGE_AWS_KMS_KEY_ID: "lb_disburser_pk"
      LIGHTBRIDGE_AWS_KMS_REGION: "us-east-1"
      LIGHTBRIDGE_AWS_KMS_ENDPOINT: "http://kms:8888/"
      # DB
      LIGHTBRIDGE_POSTGRES_PASSWORD: "abcdef"
      LIGHTBRIDGE_POSTGRES_DB_HOST: "lightbridge_db" # always use local instance for tests
  
  lightbridge_db:
    image: postgres
    deploy:
      replicas: 1
    environment:
      POSTGRES_PASSWORD: "abcdef"
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  #in no way should this be running in production
  kms:
    image: bobanetwork/local-kms:latest
    environment:
      PORT: "8888"
      KMS_REGION: "us-east-1"
    volumes:
      - type: bind
        source: ./test/kms-seed.yml
        target: /init/seed.yaml # must be yaml, yml is not recognized
    ports:
      - 8888:8888